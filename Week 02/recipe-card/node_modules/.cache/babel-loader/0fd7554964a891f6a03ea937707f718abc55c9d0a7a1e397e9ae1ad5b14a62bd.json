{"ast":null,"code":"var _jsxFileName = \"/Users/scarl/Desktop/recipe-card/src/App.js\";\n//App gets a capital A because it's a react component\n\nimport \"./components/RecipeCard.css\";\n// this is how we import img file data as a js variable\nimport RECIPE_IMG from \"./assets/pancake.png\"; // this is imported as a javascript variable\nimport { RECIPE } from './components/recipe-data';\n\n//() are needed in return statement if there are multiple lines\n\n//the above is the same as this\n//function App() {\n//  return <div>App</div>\n//}\n\n//react doesn't allow sibling divs so we can use the empty <> instead\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: RECIPE_IMG,\n      alt: \"pancake\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: RECIPE.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: RECIPE.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Ingredients\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: RECIPE.ingredients.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Instructions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: RECIPE.instructions.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["RECIPE_IMG","RECIPE","jsxDEV","_jsxDEV","App","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","title","description","ingredients","map","item","index","instructions","_c","$RefreshReg$"],"sources":["/Users/scarl/Desktop/recipe-card/src/App.js"],"sourcesContent":["//App gets a capital A because it's a react component\n\nimport \"./components/RecipeCard.css\"\n// this is how we import img file data as a js variable\nimport RECIPE_IMG from \"./assets/pancake.png\" // this is imported as a javascript variable\nimport {RECIPE} from './components/recipe-data'\n\n//() are needed in return statement if there are multiple lines\n\n//the above is the same as this\n//function App() {\n//  return <div>App</div>\n//}\n\n//react doesn't allow sibling divs so we can use the empty <> instead\nconst App = () => {\n    return (\n        <div className='card'>\n            <img src={RECIPE_IMG} alt=\"pancake\" /> \n\n            <h2>{RECIPE.title}</h2>\n            <p>{RECIPE.description}</p>\n            <h3>Ingredients</h3>\n            <ul>\n                {RECIPE.ingredients.map((item, index) => {\n                    return <li key={index}>{item}</li>\n                })}\n            </ul>\n            \n            <h3>Instructions</h3>\n            <ol>\n                {RECIPE.instructions.map((item, index) => (\n                    <li key={index}>{item}</li>\n                ))}\n            </ol>\n        </div>\n    )\n}\n\nexport default App"],"mappings":";AAAA;;AAEA,OAAO,6BAA6B;AACpC;AACA,OAAOA,UAAU,MAAM,sBAAsB,EAAC;AAC9C,SAAQC,MAAM,QAAO,0BAA0B;;AAE/C;;AAEA;AACA;AACA;AACA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,GAAG,GAAGA,CAAA,KAAM;EACd,oBACID,OAAA;IAAKE,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACjBH,OAAA;MAAKI,GAAG,EAAEP,UAAW;MAACQ,GAAG,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEtCT,OAAA;MAAAG,QAAA,EAAKL,MAAM,CAACY;IAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvBT,OAAA;MAAAG,QAAA,EAAIL,MAAM,CAACa;IAAW;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BT,OAAA;MAAAG,QAAA,EAAI;IAAW;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBT,OAAA;MAAAG,QAAA,EACKL,MAAM,CAACc,WAAW,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;QACrC,oBAAOf,OAAA;UAAAG,QAAA,EAAiBW;QAAI,GAAZC,KAAK;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC;MACtC,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eAELT,OAAA;MAAAG,QAAA,EAAI;IAAY;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBT,OAAA;MAAAG,QAAA,EACKL,MAAM,CAACkB,YAAY,CAACH,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACjCf,OAAA;QAAAG,QAAA,EAAiBW;MAAI,GAAZC,KAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAC7B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAAAQ,EAAA,GAtBKhB,GAAG;AAwBT,eAAeA,GAAG;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}