{"ast":null,"code":"var _jsxFileName = \"/Users/scarl/Desktop/SCHOOL/NYU/25F Dynamic Web/DynamicWebClassNotes/Midterm/vision-board/src/components/NavBar.js\";\nimport React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport cx from \"classnames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Panel = props => {\n  const {\n    className,\n    children,\n    ...rest\n  } = props;\n  const finalClassNames = cx(className, \"border rounded p-3 shadow bg-white w-full\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ...rest,\n    className: finalClassNames,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = Panel;\nconst Navbar = () => {\n  /*\n    V6+ of React Router changed the way NavLinks work. You used to have access to a var you didn't make called IsActive\n    Now we need to write an inline checker function\n    Here is how to style NavLink with Tailwind and the new version of React Router and Remix\n    */\n\n  //define our base class & our active class as js ver\n  const baseClass = \"text-blue-500\";\n  const activeClass = \"text-blue-500 border-l-4 border-blue-500 font-bold decoration-solid pl-1\";\n  return /*#__PURE__*/_jsxDEV(Panel, {\n    className: \"sticky top-0 overflow-y-scroll flex flex-col item-start\",\n    children: [/*#__PURE__*/_jsxDEV(NavLink, {\n      to: \"/\",\n      className: ({\n        isActive\n      }) =>\n      // isActive is a prop we get for free from NavLink\n      //({isActive}) => {} is like  (props) => {const {isActive}} =\n      //now we have isActive destructured out of our props we get\n      //use a ternary to apply base or active class\n      //conditionToCheck ? return this is true : else do this\n\n      isActive ? activeClass : baseClass,\n      children: \"Button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n      to: \"/favorites\",\n      className: ({\n        isActive\n      }) => isActive ? activeClass : baseClass,\n      children: \"Accordion\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n      to: \"/dropdown\",\n      className: ({\n        isActive\n      }) => isActive ? activeClass : baseClass,\n      children: \"Dropdown\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Navbar;\nexport default Navbar;\nvar _c, _c2;\n$RefreshReg$(_c, \"Panel\");\n$RefreshReg$(_c2, \"Navbar\");","map":{"version":3,"names":["React","Link","NavLink","cx","jsxDEV","_jsxDEV","Panel","props","className","children","rest","finalClassNames","fileName","_jsxFileName","lineNumber","columnNumber","_c","Navbar","baseClass","activeClass","to","isActive","_c2","$RefreshReg$"],"sources":["/Users/scarl/Desktop/SCHOOL/NYU/25F Dynamic Web/DynamicWebClassNotes/Midterm/vision-board/src/components/NavBar.js"],"sourcesContent":["import React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport cx from \"classnames\";\n\nconst Panel = (props) => {\n  const { className, children, ...rest } = props;\n  const finalClassNames = cx(\n    className,\n    \"border rounded p-3 shadow bg-white w-full\"\n  );\n  return (\n    <div {...rest} className={finalClassNames}>\n      {children}\n    </div>\n  );\n};\n\nconst Navbar = () => {\n  /*\n    V6+ of React Router changed the way NavLinks work. You used to have access to a var you didn't make called IsActive\n    Now we need to write an inline checker function\n    Here is how to style NavLink with Tailwind and the new version of React Router and Remix\n    */\n\n  //define our base class & our active class as js ver\n  const baseClass = \"text-blue-500\";\n  const activeClass =\n    \"text-blue-500 border-l-4 border-blue-500 font-bold decoration-solid pl-1\";\n\n  return (\n    <Panel className=\"sticky top-0 overflow-y-scroll flex flex-col item-start\">\n      <NavLink\n        to=\"/\"\n        className={({ isActive }) =>\n          // isActive is a prop we get for free from NavLink\n          //({isActive}) => {} is like  (props) => {const {isActive}} =\n          //now we have isActive destructured out of our props we get\n          //use a ternary to apply base or active class\n          //conditionToCheck ? return this is true : else do this\n\n          isActive ? activeClass : baseClass\n        }\n      >\n        Button\n      </NavLink>\n\n      <NavLink\n        to=\"/favorites\"\n        className={({ isActive }) => (isActive ? activeClass : baseClass)}\n      >\n        Accordion\n      </NavLink>\n\n      <NavLink\n        to=\"/dropdown\"\n        className={({ isActive }) => (isActive ? activeClass : baseClass)}\n      >\n        Dropdown\n      </NavLink>\n    </Panel>\n  );\n};\n\nexport default Navbar;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,OAAO,QAAQ,kBAAkB;AAChD,OAAOC,EAAE,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,KAAK,GAAIC,KAAK,IAAK;EACvB,MAAM;IAAEC,SAAS;IAAEC,QAAQ;IAAE,GAAGC;EAAK,CAAC,GAAGH,KAAK;EAC9C,MAAMI,eAAe,GAAGR,EAAE,CACxBK,SAAS,EACT,2CACF,CAAC;EACD,oBACEH,OAAA;IAAA,GAASK,IAAI;IAAEF,SAAS,EAAEG,eAAgB;IAAAF,QAAA,EACvCA;EAAQ;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACC,EAAA,GAXIV,KAAK;AAaX,MAAMW,MAAM,GAAGA,CAAA,KAAM;EACnB;AACF;AACA;AACA;AACA;;EAEE;EACA,MAAMC,SAAS,GAAG,eAAe;EACjC,MAAMC,WAAW,GACf,0EAA0E;EAE5E,oBACEd,OAAA,CAACC,KAAK;IAACE,SAAS,EAAC,yDAAyD;IAAAC,QAAA,gBACxEJ,OAAA,CAACH,OAAO;MACNkB,EAAE,EAAC,GAAG;MACNZ,SAAS,EAAEA,CAAC;QAAEa;MAAS,CAAC;MACtB;MACA;MACA;MACA;MACA;;MAEAA,QAAQ,GAAGF,WAAW,GAAGD,SAC1B;MAAAT,QAAA,EACF;IAED;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,eAEVV,OAAA,CAACH,OAAO;MACNkB,EAAE,EAAC,YAAY;MACfZ,SAAS,EAAEA,CAAC;QAAEa;MAAS,CAAC,KAAMA,QAAQ,GAAGF,WAAW,GAAGD,SAAW;MAAAT,QAAA,EACnE;IAED;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,eAEVV,OAAA,CAACH,OAAO;MACNkB,EAAE,EAAC,WAAW;MACdZ,SAAS,EAAEA,CAAC;QAAEa;MAAS,CAAC,KAAMA,QAAQ,GAAGF,WAAW,GAAGD,SAAW;MAAAT,QAAA,EACnE;IAED;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEZ,CAAC;AAACO,GAAA,GA5CIL,MAAM;AA8CZ,eAAeA,MAAM;AAAC,IAAAD,EAAA,EAAAM,GAAA;AAAAC,YAAA,CAAAP,EAAA;AAAAO,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}